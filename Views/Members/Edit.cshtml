@model PinewoodGrow.Models.Member

@{
	ViewData["Title"] = "Edit";
}
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@*For Cookies*@
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor

<h1 style="text-align: center;">@Html.DisplayFor(model => model.FullName)</h1>

<h4>Edit</h4>
<hr />
<partial name="_MemberSituationModal" />
<partial name="_addDietaryModal" />
<partial name="_addIllnessModal" />
<form asp-action="Edit" enctype="multipart/form-data">
	<div asp-validation-summary="ModelOnly" class="text-danger"></div>
	<div class="row">
		<div class="col-md-6">
			<div asp-validation-summary="ModelOnly" class="text-danger"></div>
			<div class="form-group">
				<label asp-for="FirstName" class="control-label"></label>
				<input asp-for="FirstName" class="form-control" placeholder="Last Name Eg(John)" />
				<span asp-validation-for="FirstName" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="LastName" class="control-label"></label>
				<input asp-for="LastName" class="form-control" placeholder="First Name Eg(Doe)" />
				<span asp-validation-for="LastName" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="DOB" class="control-label"></label>
				<input asp-for="DOB" class="form-control" />
				<span asp-validation-for="DOB" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="GenderID" class="control-label"></label>
				<select asp-for="GenderID" class="form-control" asp-items="ViewBag.GenderID">
					<option value="">Select a Gender</option>
				</select>
				<span asp-validation-for="GenderID" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="Telephone" class="control-label"></label>
				<input asp-for="Telephone" class="form-control" placeholder="6367727345" />
				<span asp-validation-for="Telephone" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="Email" class="control-label"></label>
				<input asp-for="Email" class="form-control" placeholder="johndoe@gmail.com" />
				<span asp-validation-for="Email" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="HouseholdID" class="control-label"></label>
				<select asp-for="HouseholdID" class="form-control" asp-items="ViewBag.HouseSummary">
					<option value="">Select a Household</option>
				</select>
				<span asp-validation-for="HouseholdID" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="VolunteerID" class="control-label"></label>
				<select asp-for="VolunteerID" class="form-control" asp-items="ViewBag.VolunteerID">
					<option value="">Select a Volunteer</option>
				</select>
				<span asp-validation-for="VolunteerID" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="CompletedOn" class="control-label"></label>
				<input asp-for="CompletedOn" class="form-control" />
				<span asp-validation-for="CompletedOn" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="Notes" class="control-label"></label>
				<textarea asp-for="Notes" class="form-control" placeholder="Please Enter any Additional Information"></textarea>
				<span asp-validation-for="Notes" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label class="control-label">Upload Documents:</label>
				<input type="file" class="" name="theFiles" multiple="multiple" />
			</div>
			<div class="form-group form-check">
				<label class="form-check-label">
					<input class="form-check-input" asp-for="Consent" /> @Html.DisplayNameFor(model => model.Consent)
				</label>
			</div>
		</div>
		<div class="col-md-6">
			<div class="row">
				<div class="form-group col-md-6">
					<label class="control-label">Chosen Dietary Restrictions</label> <button type="button" id="btnRight" class="btn btn-danger btn-sm">
						<strong>-</strong>
					</button>
					@Html.ListBox("selectedOptions", (MultiSelectList)ViewBag.selDietOpts, new { @size = 3, @class = "form-control" })
				</div>

				<div class="form-group col-md-6">
					<label class="control-label">Choose Dietary Restrictions</label>
					<button type="button" id="btnLeft" class="btn btn-success btn-sm">
						<strong>+</strong>
					</button>&nbsp;&nbsp;
					@Html.ListBox("availOptions", (MultiSelectList)ViewBag.availDietOpts, new { @size = 3, @class = "form-control" })
					<button class="btn btn-outline-secondary btn-sm" id="nowAddDietary"
							data-toggle="modal" data-target="#addDietaryModal"
							type="button">
						<strong>Add Dietary Restriction</strong>
					</button>
				</div>

		</div>
		<div class="row">
			<div class="form-group col-md-6">
				<label class="control-label">Chosen Illnesses</label> <button type="button" id="btnRight" class="btn btn-danger btn-sm">
					<strong>-</strong>
				</button>
				@Html.ListBox("selectedOptions", (MultiSelectList)ViewBag.selIllOpts, new { @size = 3, @class = "form-control" })
			</div>

			<div class="form-group col-md-6">
				<label class="control-label">Choose Illnesses</label>
				<button type="button" id="btnLeft" class="btn btn-success btn-sm">
					<strong>+</strong>
				</button>&nbsp;&nbsp;
				@Html.ListBox("availOptions", (MultiSelectList)ViewBag.availIllOpts, new { @size = 3, @class = "form-control" })
				<button class="btn btn-outline-secondary btn-sm" id="nowAddIllness"
						data-toggle="modal" data-target="#addIllnessModal"
						type="button">
					<strong>Add Illness</strong>
				</button>
			</div>
		</div>
				<div class="form-group" id="ListMemberSituations">
					<label class="control-label"><strong>Income Sources</strong> &nbsp; &nbsp;</label><button class="btn btn-outline-success modal-link" tag="" name="CreateForm" data-toggle="modal" data-target="#theMemberSituationModal" title="Add Situation" type="button">&#x271A;</button>
					<div class="col-md-offset-1" id="MemberSituationList">
						<table>
							@{
								foreach (var item in Model.MemberSituations.OrderBy(s => s.Situation.Name))
								{
									@:<tr><td>
									@item.Summary
									@:</td><td>
									@:&nbsp; &nbsp;
									<button class="btn btn-sm modal-link" tag="@item.ID" name="EditForm" data-toggle="modal" data-target="#theMemberSituationModal" title="Edit @item.Summary" type="button">&#x270D;</button>
									<button class="btn btn-sm modal-link" tag="@item.ID" name="DeleteForm" data-toggle="modal" data-target="#theMemberSituationModal" title="Delete @item.Summary" type="button">&#x274C;</button>
									@:</td></tr>
									}
							}
						</table>
					</div>
				</div>
			</div>
		</div>
		<div class="row" style="margin: 0 auto; padding: 10px; align-content: center; justify-content:center;">
			<div class="form-group" style="padding-right: 20px">
				<a asp-action="Index" class="btn btn-primary">Back</a>
			</div>
			<div class="form-group">
				<input type="submit" id="btnSubmit" value="Save" class="btn btn-info" />
			</div>
		</div>
	</form>

	@section Scripts {
		@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
		<script src="~/js/multiselect.js"></script>
        <script src="~/js/refreshDDL.js"></script>
        <script type="text/javascript">
		//New for modal
            function refreshModal(actionForm, memberSituationID) {
              switch (actionForm) {
                case 'CreateForm': $('#formMemberSituationBody').load('/MemberSituations/CreateMemberSituation/@Model.ID');
                    break;
                  case 'EditForm': $('#formMemberSituationBody').load('/MemberSituations/EditMemberSituation/' + memberSituationID);
                    break;
                  case 'DeleteForm': $('#formMemberSituationBody').load('/MemberSituations/DeleteMemberSituation/' + memberSituationID)
                    break;
                default: break;
              };
            return;
            };
            $(document).on("click", ".modal-link", function () {
                var actionForm = $(this).attr("name");
                var memberSituationID = $(this).attr("tag");
                refreshModal(actionForm, memberSituationID);
            });
            $(document).on("click", "#submitMemberSituationForm", function (event) {
                event.preventDefault();
                var form = $('#theMemberSituationForm');
                if (form.valid()) {
                    $.ajax({
                        type: "POST",
                        url: form.attr('action'),
                        data: form.serialize(),
                        success: function () {
                            $('#theMemberSituationModal').modal('hide');
                        },
                        error: function () {
                            alert("Operation Failed.  There was a problem maintaing the data.");
                        }
                    });
                }
                return false;
            });
            $('#theMemberSituationModal').on('hide.bs.modal', function () {
                $('#MemberSituationList').load('/Members/MemberSituationList/@Model.ID');
        });
        //Add Dietary modal
        $('#submitDietaryCreate').click(function (event) {
            event.preventDefault();
            var form = $('#createDietaryForm');
            if (form.valid()) {
                $.ajax({
                    type: "POST",
                    url: form.attr('action'),
                    data: form.serialize(),
                    success: function () {
                        $('#addDietaryModal').modal('hide');
                    },
                    error: function () {
                        alert("Create Failed.  There was a problem adding the record.");
                    }
                });
            }
            return false;
        });
        $('#addDietaryModal').on('hide.bs.modal', function () {
            $('#createDietaryForm').find("input[type=text], textarea, select").val("");//to clear the data in the popup
            //This will be a comma separated list of the keys of the selected options and
            //we will pass it as a QueryString parameter when we get the new data
            var qstring = "";
            //Get the collection of currently selected options
            var skipData = $("#selectedOptions option");
            $.each(skipData, function () {
                qstring += $(this).val() + ",";
            });
            var URI = "/Members/GetDietaries?skip=" + qstring.substring(0, qstring.length - 1);
            refreshDDL("availOptions", URI, true, "No Data Available", false, null, false);
            /*var URI2 = "/Members/GetDietariesCheckbox";
            refreshCheckbox("illness", URI2, true, "No Data Available", false, null, false); */       });

		//Add Illness modal
        $('#submitIllnessCreate').click(function (event) {
            event.preventDefault();
            var form = $('#createIllnessForm');
            if (form.valid()) {
                $.ajax({
                    type: "POST",
                    url: form.attr('action'),
                    data: form.serialize(),
                    success: function () {
                        $('#addIllnessModal').modal('hide');
                    },
                    error: function () {
                        alert("Create Failed.  There was a problem adding the record.");
                    }
                });
            }
            return false;
        });
        $('#addIllnessModal').on('hide.bs.modal', function () {
            $('#createIllnessForm').find("input[type=text], textarea, select").val("");//to clear the data in the popup
            //This will be a comma separated list of the keys of the selected options and
            //we will pass it as a QueryString parameter when we get the new data
            var qstring = "";
            //Get the collection of currently selected options
            var skipData = $("#selectedOptions option");
            $.each(skipData, function () {
                qstring += $(this).val() + ",";
            });
            var URI = "/Members/GetIllnesses?skip=" + qstring.substring(0, qstring.length - 1);
            refreshDDL("availOptions", URI, true, "No Data Available", false, null, false);
            /*var URI2 = "/Members/GetIllnessesCheckbox";
            refreshCheckbox("illness", URI2, true, "No Data Available", false, null, false); */       });

        </script>
	}
