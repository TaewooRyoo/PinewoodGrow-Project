#pragma checksum "C:\Users\Owner\Desktop\PinewoodGrow\Views\MapReport\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "f327480acd956399baac67ad3d83b00f39b0b34b"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_MapReport_Index), @"mvc.1.0.view", @"/Views/MapReport/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Owner\Desktop\PinewoodGrow\Views\_ViewImports.cshtml"
using PinewoodGrow;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Owner\Desktop\PinewoodGrow\Views\_ViewImports.cshtml"
using PinewoodGrow.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f327480acd956399baac67ad3d83b00f39b0b34b", @"/Views/MapReport/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d40aafa2a956cb9f4837a45d08862015ed55438c", @"/Views/_ViewImports.cshtml")]
    public class Views_MapReport_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n\r\n");
#nullable restore
#line 3 "C:\Users\Owner\Desktop\PinewoodGrow\Views\MapReport\Index.cshtml"
  
    ViewData["Title"] = "Index";

#line default
#line hidden
#nullable disable
            WriteLiteral("<h1 id=\"test\">Maps</h1>\r\n");
            WriteLiteral(@"
<div style=""margin: 22px"">
    <div class=""form-inline d-flex justify-content-center md-form form-sm mt-0"">
        <i class=""fas fa-search"" aria-hidden=""true""></i>
        <input  class=""form-control form-control-sm ml-3 w-75"" type=""text"" placeholder=""Search""
               aria-label=""Search"" id=""autocomplete"">

    </div>
    <div class=""row"">
        <div class=""custom-control custom-switch m-3"">
            <input type=""checkbox"" checked=""checked"" class=""custom-control-input purple"" id=""TopSwitch""");
            BeginWriteAttribute("style", " style=\"", 1857, "\"", 1865, 0);
            EndWriteAttribute();
            WriteLiteral(@" onclick=""filter()"">
            <label class=""custom-control-label purple"" for=""TopSwitch"">20-25k</label>
        </div>
        <div class=""custom-control custom-switch m-3"">
            <input type=""checkbox"" checked=""checked"" class=""custom-control-input"" id=""HighSwitch"" onclick=""filter()"">
            <label class=""custom-control-label"" for=""HighSwitch"">15-20k</label>
        </div>
        <div class=""custom-control custom-switch m-3"">
            <input type=""checkbox"" checked=""checked"" class=""custom-control-input"" id=""MidSwitch"" onclick=""filter()"">
            <label class=""custom-control-label"" for=""MidSwitch"">10-15k</label>
        </div>
        <div class=""custom-control custom-switch m-3"">
            <input type=""checkbox"" checked=""checked"" class=""custom-control-input"" id=""LowSwitch"" onclick=""filter()"">
            <label class=""custom-control-label"" for=""LowSwitch"">5-10k</label>
        </div>
        <div class=""custom-control custom-switch m-3"">
            <input type=""checkbo");
            WriteLiteral("x\" checked=\"checked\" class=\"custom-control-input\" id=\"LowestSwitch\" onclick=\"filter()\">\r\n            <label class=\"custom-control-label\" for=\"LowestSwitch\">0-5k</label>\r\n        </div>\r\n");
            WriteLiteral(@"    </div>
</div>
<div id=""map"" style=""height: 900px; width: 100%""></div>

<script>
    const template = document.createElement('template');
    template.innerHTML = `
<style>
.popup {
    width: 400px;
    overflow: hidden;
    margin-bottom: 30px;
}
.pop-title{

}
.pop-title img{
    position:relative;
    top: -60px;
}
.pop-title h1 {
    font-size: 24px;
    margin-bottom: 0;

}
.popup h2{
    font-size: 20px
    margin-top: 0;
}
.popup h2, h3 {
    font-weight: 300;
}
.popup h3 {
   width: 60%;
}


.pop-content li {
    display: flex;

    width: 90px;
}
.list-time{
    float:left;
}

.list-time > p{
display: inline-block;
margin: 0 10px;

font-size: 17px;
    font-weight: 300;
}
#groceryName{
margin-top: 60px;
}
}


</style>
    <div class=""popup"">
    <div class=""pop-title"">

    <h1 id=""FullAddress""></h1>
    <h2>Household</h2>
<img src=""svg/Purplewave.svg"" alt=""""/>
    </div>
    <div class=""pop-content"">
        <div class=""row"">
 ");
            WriteLiteral(@"           <dl>
                <dt>Income:</dt>
                <dd id=""income""></dd>
                <dt>Family Size:</dt>
                <dd id=""size""></dd>
            </dl>
    </div>

        <div class=""row"">
            <h2>Travel</h2>
            <h3>Grow Community Center</h3>
                <ul>
                    <li class=""list-time"">
                        <img src=""svg/distance.svg"" alt=""Distance to Grow community Center, in meters""/>
                        <p id=""growDistance""></p>
                    </li>
                    <li class=""list-time"">
                    <img src=""svg/drive.svg"" alt=""Time to Drive to Grow Community Center, in seconds""/>
                    <p id=""growDrive""></p>
                    </li>
                    <li class=""list-time"" >
                    <img src=""svg/bike.svg"" alt=""Time to bike""/>
                    <p id=""growBike""></p>
                    </li>
                    <li class=""list-time"">
                    <img src=""");
            WriteLiteral(@"svg/walk.svg"" alt=""time to walk""/>
                    <p id=""growWalk""></p>
                    </li>
                </ul>
            <h3 name=""groceryName"" id=""groceryName""></h3>
            <ul>
                <li class=""list-time"">
                    <img src=""svg/distance.svg"" alt=""Distance to nearest grocery store, in meters""/>
                    <p id=""groceryDistance""></p>
                </li>
                <li class=""list-time"">
                <img src=""svg/drive.svg"" alt=""Time to Drive to nearest grocery store, in seconds""/>
                <p id=""groceryDrive""></p>
                </li>
                <li class=""list-time"">
                    <img src=""svg/bike.svg"" alt=""time to bike""/>
                    <p id=""groceryBike""></p>
                    </li>
                <li class=""list-time"">
                <img src=""svg/walk.svg"" alt=""time to walk""/>
                <p id=""groceryWalk""></p>
                </li>
            </ul>
        </div>
    </div>
   ");
            WriteLiteral(@" </div>
</div>
`;
    class pop extends HTMLElement {
        constructor() {
            super();
            this.attachShadow({ mode: 'open' });
            this.shadowRoot.appendChild(template.content.cloneNode(true));
            this.shadowRoot.getElementById('FullAddress').innerText = this.getAttribute('name');
            this.shadowRoot.getElementById('income').innerText = this.getAttribute('data-income');
            this.shadowRoot.getElementById('size').innerText = this.getAttribute('data-size');
            this.shadowRoot.getElementById('growDistance').innerText = this.getAttribute('data-growDistance');
            this.shadowRoot.getElementById('growDrive').innerText = this.getAttribute('data-growDrive');
            this.shadowRoot.getElementById('growBike').innerText = this.getAttribute('data-growBike');
            this.shadowRoot.getElementById('growWalk').innerText = this.getAttribute('data-growWalk');
            this.shadowRoot.getElementById('groceryName').innerText = thi");
            WriteLiteral(@"s.getAttribute('data-groceryName');
            this.shadowRoot.getElementById('groceryDistance').innerText =  this.getAttribute('data-groceryDistance');
            this.shadowRoot.getElementById('groceryDrive').innerText = this.getAttribute('data-groceryDrive');
            this.shadowRoot.getElementById('groceryBike').innerText = this.getAttribute('data-groceryBike');
            this.shadowRoot.getElementById('groceryWalk').innerText = this.getAttribute('data-groceryWalk');
        }
    }

    window.customElements.define('marker-pop', pop);


    let autocomplete;
    var MarkersArr = [];
    var map;


    function initMap() {
        const infoWindow = new google.maps.InfoWindow();
        autocomplete = new google.maps.places.Autocomplete(
            document.getElementById('autocomplete'),
            {
                types: ['address'],
                componentRestrictions: { 'country': ['CA'] },
                fields: ['geometry', 'name', 'address_component']
          ");
            WriteLiteral(@"  });
        autocomplete.addListener('place_changed', onPlaceChanged);

        // The location of Grow
        const Grow = { lat: 43.1103481, lng: -79.0789613 };
        // The map, centered at Grow
        map = new window.google.maps.Map(document.getElementById(""map""),
            {
                zoom: 16,
                center: Grow,
                mapId: 'db31debbd2731710'
            });

        const MainMarker = new google.maps.Marker({
            position: Grow,
            map: map,
            title: 'Grow',
            icon: '/images/GrowMapIcon.png'
        });




");
#nullable restore
#line 261 "C:\Users\Owner\Desktop\PinewoodGrow\Views\MapReport\Index.cshtml"
          
            List<PinewoodGrow.ViewModels.MapMarker> mapMarkers = ViewBag.Markers;
            foreach (var mapMarker in mapMarkers)
            {

                

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n                    var marker = new window.google.maps.Marker({\r\n                        map: map,\r\n                        category: \'");
#nullable restore
#line 270 "C:\Users\Owner\Desktop\PinewoodGrow\Views\MapReport\Index.cshtml"
                              Write(mapMarker.Category);

#line default
#line hidden
#nullable disable
            WriteLiteral("\',\r\n                        position: { lat: ");
#nullable restore
#line 271 "C:\Users\Owner\Desktop\PinewoodGrow\Views\MapReport\Index.cshtml"
                                    Write(mapMarker.Lat);

#line default
#line hidden
#nullable disable
            WriteLiteral(", lng: ");
#nullable restore
#line 271 "C:\Users\Owner\Desktop\PinewoodGrow\Views\MapReport\Index.cshtml"
                                                         Write(mapMarker.Lng);

#line default
#line hidden
#nullable disable
            WriteLiteral(" },\r\n                        title: \'");
#nullable restore
#line 272 "C:\Users\Owner\Desktop\PinewoodGrow\Views\MapReport\Index.cshtml"
                           Write(mapMarker.Address);

#line default
#line hidden
#nullable disable
            WriteLiteral("\',\r\n                        icon: \'");
#nullable restore
#line 273 "C:\Users\Owner\Desktop\PinewoodGrow\Views\MapReport\Index.cshtml"
                          Write(mapMarker.Color);

#line default
#line hidden
#nullable disable
            WriteLiteral("\',\r\n                        content: \'<marker-pop");
            BeginWriteAttribute("name", " name=\"", 9492, "\"", 9517, 1);
#nullable restore
#line 274 "C:\Users\Owner\Desktop\PinewoodGrow\Views\MapReport\Index.cshtml"
WriteAttributeValue("", 9499, mapMarker.Address, 9499, 18, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(@"></marker-pop>'
                        /*icon: 'https://maps.gstatic.com/mapfiles/place_api/icons/v1/png_71/geocode-71.png',
                        icon_background_color: '#7B9EB0',
                        icon_mask_base_uri: ""https://maps.gstatic.com/mapfiles/place_api/icons/v2/generic_pinlet""*/
                    });
                    google.maps.event.addListener(marker, 'click', function(){
                        infoWindow.close(); // Close previously opened infowindow
                        infoWindow.setContent(`<marker-pop");
            BeginWriteAttribute("name", " name=\"", 10068, "\"", 10093, 1);
#nullable restore
#line 281 "C:\Users\Owner\Desktop\PinewoodGrow\Views\MapReport\Index.cshtml"
WriteAttributeValue("", 10075, mapMarker.Address, 10075, 18, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" data-size=\"");
#nullable restore
#line 281 "C:\Users\Owner\Desktop\PinewoodGrow\Views\MapReport\Index.cshtml"
                                                                                           Write(mapMarker.FamilySize);

#line default
#line hidden
#nullable disable
            WriteLiteral("\" data-income=\"");
#nullable restore
#line 281 "C:\Users\Owner\Desktop\PinewoodGrow\Views\MapReport\Index.cshtml"
                                                                                                                               Write(mapMarker.Income);

#line default
#line hidden
#nullable disable
            WriteLiteral("\"\r\n                                                data-growDrive=\"");
#nullable restore
#line 282 "C:\Users\Owner\Desktop\PinewoodGrow\Views\MapReport\Index.cshtml"
                                                           Write(mapMarker.GrowDrive);

#line default
#line hidden
#nullable disable
            WriteLiteral("\" data-growBike= \"");
#nullable restore
#line 282 "C:\Users\Owner\Desktop\PinewoodGrow\Views\MapReport\Index.cshtml"
                                                                                                 Write(mapMarker.GrowBike);

#line default
#line hidden
#nullable disable
            WriteLiteral("\" data-growWalk=\"");
#nullable restore
#line 282 "C:\Users\Owner\Desktop\PinewoodGrow\Views\MapReport\Index.cshtml"
                                                                                                                                     Write(mapMarker.GrowWalk);

#line default
#line hidden
#nullable disable
            WriteLiteral("\"  data-growDistance=\"");
#nullable restore
#line 282 "C:\Users\Owner\Desktop\PinewoodGrow\Views\MapReport\Index.cshtml"
                                                                                                                                                                              Write(mapMarker.GrowDistance);

#line default
#line hidden
#nullable disable
            WriteLiteral("\"\r\n                                                data-groceryDrive = \"");
#nullable restore
#line 283 "C:\Users\Owner\Desktop\PinewoodGrow\Views\MapReport\Index.cshtml"
                                                                Write(mapMarker.GroceryDrive);

#line default
#line hidden
#nullable disable
            WriteLiteral("\" data-groceryBike = \"");
#nullable restore
#line 283 "C:\Users\Owner\Desktop\PinewoodGrow\Views\MapReport\Index.cshtml"
                                                                                                             Write(mapMarker.GroceryBike);

#line default
#line hidden
#nullable disable
            WriteLiteral("\" data-groceryWalk = \"");
#nullable restore
#line 283 "C:\Users\Owner\Desktop\PinewoodGrow\Views\MapReport\Index.cshtml"
                                                                                                                                                         Write(mapMarker.GroceryWalk);

#line default
#line hidden
#nullable disable
            WriteLiteral("\" data-groceryDistance = \"");
#nullable restore
#line 283 "C:\Users\Owner\Desktop\PinewoodGrow\Views\MapReport\Index.cshtml"
                                                                                                                                                                                                         Write(mapMarker.GroceryDistance);

#line default
#line hidden
#nullable disable
            WriteLiteral("\"\r\n                                                data-groceryName = \"");
#nullable restore
#line 284 "C:\Users\Owner\Desktop\PinewoodGrow\Views\MapReport\Index.cshtml"
                                                               Write(mapMarker.GroceryName);

#line default
#line hidden
#nullable disable
            WriteLiteral("\"></marker-pop>`);\r\n                        infoWindow.open(map, this);\r\n                    });\r\n                ");
#nullable restore
#line 287 "C:\Users\Owner\Desktop\PinewoodGrow\Views\MapReport\Index.cshtml"
                       

            }
        

#line default
#line hidden
#nullable disable
            WriteLiteral(@"        MarkersArr.forEach(m => console.log(m.title));


        google.maps.event.addListener(map, ""click"", function(event) {
            infoWindow.close();
        });


        function onPlaceChanged() {
            var place = autocomplete.getPlace();
            if (!place.geometry) {
                document.getElementById('autocomplete').placeholder = 'Enter a place';
            } else {

                //Centers the map around searched locaiton
                console.log(place);
                map.setCenter({ lat: place.geometry.location.lat(), lng: place.geometry.location.lng() });
                console.log(place.address_components);

                //Gets Address Full Name
                console.log(place.name);
                //Gets Postal Code
                console.log(place.address_components.find(a => a.types[0] === 'postal_code').long_name);
                //Gets City
                console.log(place.address_components.find(a => a.types[0] === 'locality').");
            WriteLiteral(@"long_name);

            }
        }
    }

    function filter() {
        var Top = document.getElementById('TopSwitch').checked;
        var High = document.getElementById('HighSwitch').checked;
        var Mid = document.getElementById('MidSwitch').checked;
        var Low = document.getElementById('LowSwitch').checked;
        var Lowest = document.getElementById('LowestSwitch').checked;



        for (var i = 0; i < MarkersArr.length; i++) {
            if ((MarkersArr[i].category === ""Top"" && Top) ||
                (MarkersArr[i].category === ""High"" && High) ||
                (MarkersArr[i].category === ""Mid"" && Mid) ||
                (MarkersArr[i].category === ""Low"" && Low) ||
                (MarkersArr[i].category === ""Lowest"" && Lowest)) {
                MarkersArr[i].setMap(map);
                console.log(""Hidden"");
            }


            else
                MarkersArr[i].setMap(null);

        }
    }
</script>
<script src=""https://maps.googleapis.com");
            WriteLiteral("/maps/api/js?key=AIzaSyBL-MHoHXLeE8E2WJKgnX60Rq03qo9EYxU&libraries=places&callback=initMap\" async defer>\r\n</script>\r\n<script src=\"https://cdn.jsdelivr.net/gh/gitbrent/bootstrap4-toggle@3.6.1/js/bootstrap4-toggle.min.js\"></script>\r\n\r\n\r\n");
            WriteLiteral("\r\n\r\n\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
